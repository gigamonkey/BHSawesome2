<?xml version="1.0" encoding="utf-8"?>

<chapter label="strings" xml:id="strings" xml:lang="en-US" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Strings</title>

  <idx>String</idx>
  <introduction>
    <p>
      Like arrays and the rest of the data types we will learn about from here
      on out, the <c>String</c> datatype is a reference type. However, unlike
      arrays, but like most other reference types in Java, <c>String</c> is
      defined by a <term>class</term>. Classes are a critical part of Java and
      we’ll discuss them in depth starting in <xref ref="classes" />. But first
      we’re going to fill in some more details we need to know about how to use
      <c>String</c> values to represent and manipulate text.
    </p>

    <p>
      It also makes sense to look at <c>String</c> on its own before we get to
      classes more generally since it’s a special class that gets a bit of extra
      love from Java. For one thing it’s one of the handful of classes in the
      <c>java.lang</c> package which means its available by default in all Java
      programs. But it is also special in that it is the only class in Java that
      supports an operator other than <c>==</c> and <c>!=</c>, namely the
      <c>+</c> string concatenation operator. And it’s the only class in Java
      with a literal value syntax that lets us write <c>String</c> values in our
      programs like <c>"hello, world!"</c>.
    </p>
  </introduction>

  <xi:include href="./topic-1-15-strings.ptx" />
  <xi:include href="./topic-2-10-strings-loops.ptx" />
</chapter>
