<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="rMedMC">
  <title>Recursion Medium Multiple Choice Questions</title>
  <p>
    These problems are similar to those you will see on the AP CSA exam.
  </p>

  <activity label="qrm_1">
    <statement>
      <p>
        Given the following method declaration, which of the following is
        printed as the result of the call <c>mystery(1234)</c>?
      </p>

      <program language="java">
        <code>
//precondition:  x &gt;=0
public static void mystery (int x)
{
    System.out.print(x % 10);

    if ((x / 10) != 0)
    {
        mystery(x / 10);
    }
    System.out.print(x % 10);
}
        </code>
      </program>
    </statement>

    <choices>
      <choice>
        <statement>
          <p>1441</p>
        </statement>

        <feedback>
          <p>
            The first call to <c>mystery</c> with the integer 1234 will print
            1234 % 10. The '%' means remainder. The remainder of 1234 divided by
            10 is 4 so the first thing printed must be 4.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>43211234</p>
        </statement>

        <feedback>
          <p>
            This has a recursive call which means that the method calls itself
            when (x / 10) is greater than or equal to zero. Each time the method
            is called it prints the remainder of the passed value divided by 10
            and then calls the method again with the result of the integer
            division of the passed number by 10 (which throws away the decimal
            part). After the recursion stops by <c>(x / 10) == 0</c> the method
            will print the remainder of the passed value divided by 10 again.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>3443</p>
        </statement>

        <feedback>
          <p>
            The first call to <c>mystery</c> with the integer 1234 will print
            1234 % 10. The '%' means remainder. The remainder of 1234 divided by
            10 is 4 so the first thing printed must be 4.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>12344321</p>
        </statement>

        <feedback>
          <p>
            The first call to <c>mystery</c> with the integer 1234 will print
            1234 % 10. The '%' means remainder. The remainder of 1234 divided by
            10 is 4 so the first thing printed must be 4.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>Many digits are printed due to infinite recursion.</p>
        </statement>

        <feedback>
          <p>
            When the recursive call to <c>mystery(1)</c> occurs (the 4th call to
            mystery), the division of x /10 equals .01--this becomes 0 because
            this is integer division and the remainder is thrown away. Therefore
            the current call will be completed and all of the previous calls to
            <c>mystery</c> will be completed.
          </p>
        </feedback>
      </choice>
    </choices>
  </activity>

  <p>
    You can step through the code using the Java Visualizer by clicking on the
    following link: <url
    href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+void+mystery+(int+x)%0A+++%7B%0A+++++++++System.out.print(x+%25+10)%3B%0A%0A+++++++++if+((x+/+10)+!%3D+0)%0A+++++++++%7B%0A++++++++++++mystery(x+/+10)%3B%0A+++++++++%7D%0A+++++++++System.out.print(x+%25+10)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++mystery(1234)%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0"
    visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+void+mystery+(int+x)%0A+++%7B%0A+++++++++System.out.print(x+%25+10)%3B%0A%0A+++++++++if+((x+/+10)+!%3D+0)%0A+++++++++%7B%0A++++++++++++mystery(x+/+10)%3B%0A+++++++++%7D%0A+++++++++System.out.print(x+%25+10)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++mystery(1234)%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0">Q-11-7-1</url>.
  </p>

  <activity label="qrm_2">
    <statement>
      <p>
        Given the following method declaration, what value is returned as the
        result of the call <c>mystery(5)</c>?
      </p>

      <program language="java">
        <code>
public static int mystery(int n)
{
    if (n == 0)
    {
        return 1;
    }
    else
    {
        return 3 * mystery (n - 1);
    }
}
        </code>
      </program>
    </statement>

    <choices>
      <choice correct="yes">
        <statement>
          <p>243</p>
        </statement>

        <feedback>
          <p>
            For the call <c>mystery(5)</c>, <c>n != 0</c> so the <c>else</c>
            statement is executed. This results in the next recursive call of
            <c>mystery(4)</c>. This will continue until the call
            <c>mystery(0)</c> is executed. At this point, the value 1 will be
            returned. Then each call of <c>mystery</c> can return with the 3 *
            the result of the recursive call. So this method will compute 3 to
            the given power.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>0</p>
        </statement>

        <feedback>
          <p>
            This can never be 0 because the stopping condition returns 1 when
            you call <c>mystery(0)</c>
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>3</p>
        </statement>

        <feedback>
          <p>
            This would only be true if you called <c>mystery(1)</c>
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>81</p>
        </statement>

        <feedback>
          <p>
            This would be true if you called <c>mystery(4)</c>
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>27</p>
        </statement>

        <feedback>
          <p>
            This would be true if you called <c>mystery(3)</c>
          </p>
        </feedback>
      </choice>
    </choices>
  </activity>

  <p>
    You can step through the code using the Java Visualizer by clicking on the
    following link: <url
    href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+mystery(int+n)%0A+++%7B%0A+++++++++if+(n+%3D%3D+0)%0A++++++++++++return+1%3B%0A+++++++++else%0A++++++++++++return+3+*+mystery+(n+-+1)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(mystery(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0"
    visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+mystery(int+n)%0A+++%7B%0A+++++++++if+(n+%3D%3D+0)%0A++++++++++++return+1%3B%0A+++++++++else%0A++++++++++++return+3+*+mystery+(n+-+1)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(mystery(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0">Q-11-7-2</url>.
  </p>

  <activity label="qrm_3">
    <statement>
      <p>
        Given the following method declaration, what value is returned as the
        result of the call <c>product(5)</c>?
      </p>

      <program language="java">
        <code>
public static int product(int n)
{
   if (n &lt;= 1)
   {
       return 1;
   }
   else
   {
       return n * product(n - 2);
   }
}
        </code>
      </program>
    </statement>

    <choices>
      <choice>
        <statement>
          <p>1</p>
        </statement>

        <feedback>
          <p>
            The value 1 will only be returned when the initial call to product
            is less than or equal to 1.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>10</p>
        </statement>

        <feedback>
          <p>
            If you assume the purpose of the method is to compute <c>n * 2</c>,
            this is correct, but the product method does not do this. Be sure to
            trace the code to see what happens.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>25</p>
        </statement>

        <feedback>
          <p>
            If you assume the purpose of the method is to compute <c>n * n</c>
            this is correct, but the product method does not do this. Be sure to
            trace the code to see what happens.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>3125</p>
        </statement>

        <feedback>
          <p>
            If you assume the purpose of the method is to compute <c>n ^ n</c>,
            this would be correct. But product does not do this. Be sure to
            trace the code to see what happens.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>15</p>
        </statement>

        <feedback>
          <p>
            The result from <c>product(5)</c> is <c>5 * product(3)</c> which is
            3 * product(1) which is <c>1</c> so the answer is <c>1 * 3 * 5 =
            15</c>.
          </p>
        </feedback>
      </choice>
    </choices>
  </activity>

  <p>
    You can step through the code using the Java Visualizer by clicking on the
    following link: <url
    href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+product(int+n)+%0A+++%7B%0A+++++++++if+(n+%3C%3D+1)%0A++++++++++++return+1%3B%0A+++++++++else%0A++++++++++++return+n+*+product(n+-+2)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(product(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0"
    visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+product(int+n)+%0A+++%7B%0A+++++++++if+(n+%3C%3D+1)%0A++++++++++++return+1%3B%0A+++++++++else%0A++++++++++++return+n+*+product(n+-+2)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(product(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0">Q11-7-3</url>.
  </p>

  <activity label="qrm_4">
    <statement>
      <p>
        Given the following method declaration, what value is returned as the
        result of the call <c>f(5)</c>?
      </p>

      <program language="java">
        <code>
public static int f(int n)
{
   if (n == 0)
   {
       return 0;
   }
   else if (n == 1)
   {
       return 1;
   }
   else
   {
       return f(n-1) + f(n-2);
   }
}
        </code>
      </program>
    </statement>

    <choices>
      <choice>
        <statement>
          <p>8</p>
        </statement>

        <feedback>
          <p>
            This would be true if it was <c>f(6)</c> not <c>f(5)</c>.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>3</p>
        </statement>

        <feedback>
          <p>
            This would be true if it was <c>f(4)</c> not <c>f(5)</c>.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>There is no result because of infinite recursion.</p>
        </statement>

        <feedback>
          <p>
            This method will stop when <c>n</c> equals <c>0</c> or <c>1</c>.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>5</p>
        </statement>

        <feedback>
          <p>
            This is the Fibonacci method which returns <c>0</c> for <c>0</c> and
            <c>1</c> for <c>1</c> and <c>Fibonacci(n-1) + Fibonacci(n-2)</c> for
            the rest of the numbers.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>0</p>
        </statement>

        <feedback>
          <p>
            This would be true if it was <c>f(0)</c> not <c>f(5)</c>.
          </p>
        </feedback>
      </choice>
    </choices>
  </activity>

  <p>
    You can step through the code using the Java Visualizer by clicking on the
    following link: <url
    href="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+f(int+n)%0A+++%7B%0A+++++++++if+(n+%3D%3D+0)%0A++++++++++++return+0%3B%0A+++++++++else+if+(n+%3D%3D+1)%0A++++++++++++return+1%3B%0A+++++++++else+return+f(n-1)+%2B+f(n-2)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(f(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0"
    visual="http://cscircles.cemc.uwaterloo.ca/java_visualize/#code=public+class+ClassNameHere+%7B%0A+++%0A+++public+static+int+f(int+n)%0A+++%7B%0A+++++++++if+(n+%3D%3D+0)%0A++++++++++++return+0%3B%0A+++++++++else+if+(n+%3D%3D+1)%0A++++++++++++return+1%3B%0A+++++++++else+return+f(n-1)+%2B+f(n-2)%3B%0A+++%7D%0A+++%0A+++public+static+void+main(String%5B%5D+args)+%7B%0A++++++System.out.println(f(5))%3B%0A++++++%0A+++%7D%0A%7D&amp;mode=display&amp;curInstr=0">Q11-7-4</url>.
  </p>
</section>
