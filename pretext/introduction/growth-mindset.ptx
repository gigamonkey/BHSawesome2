<?xml version="1.0" encoding="utf-8"?>

<section xml:id="growth-mindset">
  <title>Growth mindset and pair programming</title>
  <idx>growth mindset</idx>

  <introduction>

    <p>
      Learning to code can be hard at times and sometimes frustrating. However,
      the feeling you get when your code works is incredible! And your brain
      grows as you problem solve and debug your programs!
    </p>

    <p>
      Two ideas that can help get through those moments of frustration are
      remembering to develop a <term>growth mindset</term> and putting your
      brain together with a partner in a structure called <term>pair
      programming</term>.
    </p>

  </introduction>

  <subsection>
    <title>Growth mindset</title>

    <p>
      The basic idea of a growth mindset (which you may well have heard about
      before in school as it’s a very popular idea and not specific to
      programming) is that none of our capabilities are fixed and we can improve
      at the things we practice. That means when something seems hard it’s just
      because we haven’t mastered it yet. And conversely, when something seems
      easy for someone else it’s because they have, not because they’re just
      naturally good at it.
    </p>

    <p>
      Watch this <url href="https://youtu.be/WtKJrB5rOKs">video</url> about the
      Growth Mindset:
    </p>

    <video youtube="WtKJrB5rOKs" label="video-growth-mindset" />
    <p>
      To practice using a growth mindset, if you find yourself saying or
      thinking what’s in the left column, try substituting what’s in the right
      column instead:
    </p>

    <tabular halign="center">
        <row header="yes">
          <cell>Instead of thinking/saying</cell>
          <cell>Try thinking/saying</cell>
        </row>

        <row>
          <cell>I’m not good at this.</cell>
          <cell>I can learn to do this.</cell>
        </row>

        <row>
          <cell>I’m awesome at this.</cell>
          <cell>I’m on the right track.</cell>
        </row>

        <row>
          <cell>I give up.</cell>
          <cell>
            I’ll use a different learning strategy.
          </cell>
        </row>

        <row>
          <cell>This is too hard.</cell>
          <cell>
            This may take some time and effort.
          </cell>
        </row>

        <row>
          <cell>I can’t make this any better</cell>
          <cell>I can improve it!</cell>
        </row>

        <row>
          <cell>I just can’t do programming.</cell>
          <cell>
            I’m going to train my brain to do this.
          </cell>
        </row>

        <row>
          <cell>Plan A didn’t work.</cell>
          <cell>Let’s try something else.</cell>
        </row>

        <row>
          <cell>It’s good enough.</cell>
          <cell>How can I improve this?</cell>
        </row>
      </tabular>

  </subsection>

  <subsection>
    <title>Pair Programming</title>
    <idx>pair programming</idx>

    <p>
      In this curriculum, you are encouraged to work together in pairs to
      complete the coding challenges. <term>Pair programming</term> is a
      successful software development technique where two programmers work
      together at one computer. One, the driver, types in code while the other,
      the navigator, gives ideas and feedback. The two coders switch roles
      frequently. You can also try buddy programming where each person uses
      their own computer but both help each other while coding. The advantages
      of pair programming are that two heads are better than one, and pairs
      usually produce better code with less roadblocks. As future software
      developers, it’s also important to learn to work in teams.
    </p>

    <p>
      Watch this <url
      href="https://www.youtube.com/watch?v=q7d_JtyCq1A">video</url> about pair
      programming:
    </p>

    <video youtube="q7d_JtyCq1A" label="video-pair-programming" />
  </subsection>
</section>
