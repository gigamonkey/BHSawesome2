<?xml version="1.0" encoding="utf-8"?>

<section xml:id="topic-3-3-anatomy-of-class">
  <title>Summary</title>

  <introduction>

  </introduction>


  <subsection xml:id="summary-29">
    <title>Summary</title>

    <p>
      <ul>
        <li>
          <p>
            (AP 3.3.A.1) <term>Data encapsulation</term> is a technique in which
            the implementation details of a class are kept hidden from external
            classes.
          </p>
        </li>

        <li>
          <p>
            (AP 3.3.A.1) The keywords <c>public</c> and <c>private</c> affect
            the access of classes, data, constructors, and methods. The keyword
            <c>private</c> restricts access to the declaring class, while the
            keyword <c>public</c> allows access from classes outside the
            declaring class.
          </p>
        </li>

        <li>
          <p>
            (AP 3.3.A.2) In this course, classes are always designated
            <c>public</c> and are declared with the keyword <c>class</c>.
          </p>
        </li>

        <li>
          <p>
            (AP 3.3.A.3) In this course, constructors are always designated
            <c>public</c>.
          </p>
        </li>

        <li>
          <p>
            (AP 3.3.A.4) <term>Instance variables</term> belong to the object,
            and each object has its own copy of the variables.
          </p>
        </li>

        <li>
          <p>
            (AP 3.3.A.5) Access to attributes should be kept internal to the
            class in order to accomplish encapsulation. Therefore, it is good
            programming practice to designate the instance variables for these
            attributes as <c>private</c> unless the class specification states
            otherwise.
          </p>
        </li>

        <li>
          <p>
            <term>Instance Variables</term> define the attributes or data needed
            for objects, and <term>methods</term> define the behaviors or
            functions of the object.
          </p>
        </li>
      </ul>
    </p>
  </subsection>

  <subsection xml:id="ap-practice-19">
    <title>AP Practice</title>

    <activity label="APclass1">
      <statement>
        <p>
          Consider the Cat class which will contain a String and an int
          attribute for a catâ€™s name and age and a constructor.
        </p>

        <program>
          public class Cat {
              /* missing code */
          }

        </program>

        <p>
          Which of the following replacements for /* missing code */ is the most
          appropriate implementation of the class?
        </p>
      </statement>

      <choices>
        <choice>
          <statement id="APclass1_opt_a">
            <program>
              public String name;
              public int age;
              private Cat(String name, int age)
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass1_opt_a">
            <p>Instance variables should be private.</p>
          </feedback>
        </choice>

        <choice>
          <statement id="APclass1_opt_b">
            <program>
              public String name;
              private int age;
              private Cat(String name, int age)
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass1_opt_b">
            <p>Instance variables should be private.</p>
          </feedback>
        </choice>

        <choice correct="yes">
          <statement id="APclass1_opt_c">
            <program>
              private String name;
              private int age;
              public Cat(String name, int age)
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass1_opt_c">
            <p>
              Correct! The instance variables are private and the constructor is
              public.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement id="APclass1_opt_d">
            <program>
              public String name;
              public int age;
              public Cat(String name, int age)
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass1_opt_d">
            <p>Instance variables should be private.</p>
          </feedback>
        </choice>

        <choice>
          <statement id="APclass1_opt_e">
            <program>
              private String name;
              private int age;
              private Cat(String name, int age)
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass1_opt_e">
            <p>Constructor should be public.</p>
          </feedback>
        </choice>
      </choices>
    </activity>

    <activity label="APclass2">
      <statement>
        <p>
          Consider the Party class below which will contain three int attributes
          for numOfPeople, volumeOfMusic, and numOfBoxesOfPizza, a constructor,
          and a startParty method. The startParty method is intended to be
          accessed outside the class.
        </p>

        <program>
          public class Party {
              /* missing code */
          }

        </program>

        <p>
          Which of the following replacements for /* missing code */ is the most
          appropriate implementation of the class?
        </p>
      </statement>

      <choices>
        <choice>
          <statement id="APclass2_opt_a">
            <program>
              private int numOfPeople;
              private int volumeOfMusic;
              private int numOfBoxesOfPizza;
              public Party()
              { /* implementation not shown */ }
              private void startParty()
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass2_opt_a">
            <p>Method startParty() should be public.</p>
          </feedback>
        </choice>

        <choice correct="yes">
          <statement id="APclass2_opt_b">
            <program>
              private int numOfPeople;
              private int volumeOfMusic;
              private int numOfBoxesOfPizza;
              public Party()
              { /* implementation not shown */ }
              public void startParty()
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass2_opt_b">
            <p>
              Correct, instance variables should be private and the methods
              should be public.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement id="APclass2_opt_c">
            <program>
              public int numOfPeople;
              public int volumeOfMusic;
              public int numOfBoxesOfPizza;
              public Party()
              { /* implementation not shown */ }
              public void startParty()
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass2_opt_c">
            <p>Instance variables should be private.</p>
          </feedback>
        </choice>

        <choice>
          <statement id="APclass2_opt_d">
            <program>
              private int numOfPeople;
              private int volumeOfMusic;
              private int numOfBoxesOfPizza;
              private Party()
              { /* implementation not shown */ }
              private void startParty()
              { /* implementation not shown */ }
            </program>
          </statement>

          <feedback id="APclass2_opt_d">
            <p>Methods should be public.</p>
          </feedback>
        </choice>
      </choices>
    </activity>
  </subsection>
</section>
